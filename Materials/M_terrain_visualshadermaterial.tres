[gd_resource type="ShaderMaterial" load_steps=21 format=2]

[ext_resource path="res://Textures/T_Terrain_Albedo.png" type="Texture" id=1]
[ext_resource path="res://Textures/T_Terrain_Normal.png" type="Texture" id=2]

[sub_resource type="VisualShaderNodeScalarOp" id=8]
default_input_values = [ 0, 0.0, 1, 0.6 ]

[sub_resource type="VisualShaderNodeScalarOp" id=10]
default_input_values = [ 0, 0.0, 1, 3.0 ]
operator = 2

[sub_resource type="VisualShaderNodeScalarUniform" id=11]
uniform_name = "corruption_scalar"

[sub_resource type="VisualShaderNodeVectorCompose" id=12]
default_input_values = [ 0, 1.0, 1, 1.0, 2, 1.0 ]

[sub_resource type="VisualShaderNodeScalarOp" id=13]
default_input_values = [ 0, 1.0, 1, 1.3 ]
operator = 1

[sub_resource type="VisualShaderNodeScalarOp" id=14]
default_input_values = [ 0, 0.8, 1, 1.3 ]
operator = 2

[sub_resource type="VisualShaderNodeVectorOp" id=15]

[sub_resource type="VisualShaderNodeVectorCompose" id=16]
default_input_values = [ 0, 1.1, 1, 0.2, 2, 0.0 ]

[sub_resource type="VisualShaderNodeVectorOp" id=17]
operator = 2

[sub_resource type="VisualShaderNodeVectorOp" id=18]
operator = 2

[sub_resource type="VisualShaderNodeTextureUniform" id=1]
uniform_name = "Textrure_Albedo"

[sub_resource type="VisualShaderNodeTextureUniform" id=2]
uniform_name = "Textrure_Normal_Map"
texture_type = 2

[sub_resource type="VisualShaderNodeScalarConstant" id=4]
constant = 1.0

[sub_resource type="VisualShaderNodeVectorOp" id=5]
default_input_values = [ 0, Vector3( 0, 0, 0 ), 1, Vector3( 1, 1, 1 ) ]
operator = 2

[sub_resource type="VisualShaderNodeInput" id=6]
input_name = "time"

[sub_resource type="VisualShaderNodeScalarFunc" id=7]
function = 1

[sub_resource type="VisualShaderNodeScalarOp" id=9]
default_input_values = [ 0, 0.0, 1, 0.16 ]
operator = 2

[sub_resource type="VisualShader" id=3]
code = "shader_type spatial;
render_mode specular_schlick_ggx;

uniform float corruption_scalar;
uniform sampler2D Textrure_Albedo;
uniform sampler2D Textrure_Normal_Map : hint_normal;



void vertex() {
// Output:0

}

void fragment() {
// ScalarUniform:12
	float n_out12p0 = corruption_scalar;

// ScalarOp:15
	float n_in15p0 = 0.80000;
	float n_out15p0 = n_in15p0 * n_out12p0;

// ScalarOp:14
	float n_in14p0 = 1.00000;
	float n_out14p0 = n_in14p0 - n_out15p0;

// VectorCompose:13
	float n_in13p0 = 1.00000;
	float n_in13p1 = 1.00000;
	float n_in13p2 = 1.00000;
	vec3 n_out13p0 = vec3(n_in13p0, n_in13p1, n_in13p2);

// VectorOp:19
	vec3 n_out19p0 = vec3(n_out14p0) * n_out13p0;

// VectorCompose:18
	float n_in18p0 = 1.10000;
	float n_in18p1 = 0.20000;
	float n_in18p2 = 0.00000;
	vec3 n_out18p0 = vec3(n_in18p0, n_in18p1, n_in18p2);

// VectorOp:20
	vec3 n_out20p0 = vec3(n_out15p0) * n_out18p0;

// VectorOp:17
	vec3 n_out17p0 = n_out19p0 + n_out20p0;

// TextureUniform:3
	vec3 n_out3p0;
	float n_out3p1;
	{
		vec4 n_tex_read = texture(Textrure_Albedo, UV.xy);
		n_out3p0 = n_tex_read.rgb;
		n_out3p1 = n_tex_read.a;
	}

// VectorOp:6
	vec3 n_out6p0 = n_out17p0 * n_out3p0;

// Scalar:5
	float n_out5p0 = 1.000000;

// TextureUniform:4
	vec3 n_out4p0;
	float n_out4p1;
	{
		vec4 n_tex_read = texture(Textrure_Normal_Map, UV.xy);
		n_out4p0 = n_tex_read.rgb;
		n_out4p1 = n_tex_read.a;
	}

// Input:7
	float n_out7p0 = TIME;

// ScalarOp:11
	float n_in11p1 = 3.00000;
	float n_out11p0 = n_out7p0 * n_in11p1;

// ScalarFunc:8
	float n_out8p0 = cos(n_out11p0);

// ScalarOp:9
	float n_in9p1 = 0.16000;
	float n_out9p0 = n_out8p0 * n_in9p1;

// ScalarOp:10
	float n_in10p1 = 0.60000;
	float n_out10p0 = n_out9p0 + n_in10p1;

// Output:0
	ALBEDO = n_out6p0;
	ROUGHNESS = n_out5p0;
	NORMALMAP = n_out4p0;
	NORMALMAP_DEPTH = n_out10p0;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( -953.841, -359.86 )
nodes/fragment/3/node = SubResource( 1 )
nodes/fragment/3/position = Vector2( -160, 40 )
nodes/fragment/4/node = SubResource( 2 )
nodes/fragment/4/position = Vector2( 100, 420 )
nodes/fragment/5/node = SubResource( 4 )
nodes/fragment/5/position = Vector2( 120, 240 )
nodes/fragment/6/node = SubResource( 5 )
nodes/fragment/6/position = Vector2( 140, 100 )
nodes/fragment/7/node = SubResource( 6 )
nodes/fragment/7/position = Vector2( -840, 300 )
nodes/fragment/8/node = SubResource( 7 )
nodes/fragment/8/position = Vector2( -520, 300 )
nodes/fragment/9/node = SubResource( 9 )
nodes/fragment/9/position = Vector2( -300, 320 )
nodes/fragment/10/node = SubResource( 8 )
nodes/fragment/10/position = Vector2( -120, 320 )
nodes/fragment/11/node = SubResource( 10 )
nodes/fragment/11/position = Vector2( -680, 280 )
nodes/fragment/12/node = SubResource( 11 )
nodes/fragment/12/position = Vector2( -840, -280 )
nodes/fragment/13/node = SubResource( 12 )
nodes/fragment/13/position = Vector2( -820, -140 )
nodes/fragment/14/node = SubResource( 13 )
nodes/fragment/14/position = Vector2( -480, -320 )
nodes/fragment/15/node = SubResource( 14 )
nodes/fragment/15/position = Vector2( -660, -320 )
nodes/fragment/17/node = SubResource( 15 )
nodes/fragment/17/position = Vector2( -140, -80 )
nodes/fragment/18/node = SubResource( 16 )
nodes/fragment/18/position = Vector2( -820, 0 )
nodes/fragment/19/node = SubResource( 17 )
nodes/fragment/19/position = Vector2( -600, -140 )
nodes/fragment/20/node = SubResource( 18 )
nodes/fragment/20/position = Vector2( -600, 0 )
nodes/fragment/connections = PoolIntArray( 4, 0, 0, 8, 8, 0, 9, 0, 9, 0, 10, 0, 5, 0, 0, 3, 10, 0, 0, 9, 7, 0, 11, 0, 11, 0, 8, 0, 15, 0, 14, 1, 12, 0, 15, 1, 6, 0, 0, 0, 3, 0, 6, 1, 17, 0, 6, 0, 14, 0, 19, 0, 19, 0, 17, 0, 13, 0, 19, 1, 15, 0, 20, 0, 18, 0, 20, 1, 20, 0, 17, 1 )

[resource]
shader = SubResource( 3 )
shader_param/corruption_scalar = null
shader_param/Textrure_Albedo = ExtResource( 1 )
shader_param/Textrure_Normal_Map = ExtResource( 2 )
