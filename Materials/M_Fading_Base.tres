[gd_resource type="ShaderMaterial" load_steps=21 format=2]

[ext_resource path="res://noisetexture.tres" type="Texture" id=1]
[ext_resource path="res://Textures/T_Console_Evil_Albedo.png" type="Texture" id=2]
[ext_resource path="res://Textures/T_Console_Evil_Roughness.png" type="Texture" id=3]
[ext_resource path="res://Textures/T_Console_Evil_Normal.png" type="Texture" id=4]

[sub_resource type="VisualShaderNodeScalarOp" id=2]
output_port_for_preview = 0
default_input_values = [ 0, 0.0, 1, 0.05 ]
operator = 1

[sub_resource type="VisualShaderNodeScalarOp" id=3]
output_port_for_preview = 0
default_input_values = [ 0, 1.0, 1, 0.05 ]
operator = 1

[sub_resource type="VisualShaderNodeScalarFunc" id=4]
output_port_for_preview = 0
function = 15

[sub_resource type="VisualShaderNodeVectorOp" id=5]
operator = 2

[sub_resource type="VisualShaderNodeColorConstant" id=6]
constant = Color( 1, 0.583594, 0, 1 )

[sub_resource type="VisualShaderNodeTextureUniform" id=15]
uniform_name = "Textrure_Albedo"

[sub_resource type="VisualShaderNodeTextureUniform" id=16]
uniform_name = "Texture_Normal"
texture_type = 2

[sub_resource type="VisualShaderNodeTextureUniform" id=17]
uniform_name = "Texture_Roughness"

[sub_resource type="VisualShaderNodeExpression" id=18]
size = Vector2( 250, 150 )
expression = "scalar_Fade = input -1f;"

[sub_resource type="VisualShaderNodeInput" id=7]
output_port_for_preview = 0
input_name = "uv"

[sub_resource type="VisualShaderNodeScalarFunc" id=9]
function = 0

[sub_resource type="VisualShaderNodeScalarOp" id=10]
default_input_values = [ 0, 0.0, 1, 2.0 ]
operator = 3

[sub_resource type="VisualShaderNodeTexture" id=11]
texture = ExtResource( 1 )

[sub_resource type="VisualShaderNodeScalarOp" id=12]
output_port_for_preview = 0
operator = 1

[sub_resource type="VisualShaderNodeScalarFunc" id=13]
output_port_for_preview = 0
function = 15

[sub_resource type="VisualShader" id=14]
code = "shader_type spatial;
render_mode depth_draw_alpha_prepass, cull_disabled, specular_schlick_ggx;

uniform sampler2D Textrure_Albedo;
uniform sampler2D tex_frg_7;
uniform sampler2D Texture_Roughness;
uniform sampler2D Texture_Normal : hint_normal;



void vertex() {
// Output:0

}

void fragment() {
// TextureUniform:15
	vec3 n_out15p0;
	float n_out15p1;
	{
		vec4 n_tex_read = texture(Textrure_Albedo, UV.xy);
		n_out15p0 = n_tex_read.rgb;
		n_out15p1 = n_tex_read.a;
	}

// Input:2
	vec3 n_out2p0 = vec3(UV, 0.0);

// Texture:7
	vec4 tex_frg_7_read = texture(tex_frg_7, n_out2p0.xy);
	vec3 n_out7p0 = tex_frg_7_read.rgb;
	float n_out7p1 = tex_frg_7_read.a;

// Expression:18
	float n_out18p0;
	n_out18p0 = 0.0;
	{
		n_out18p0 =  -1f;
	}

// ScalarFunc:4
	float n_out4p0 = sin(n_out18p0);

// ScalarOp:5
	float n_in5p1 = 2.00000;
	float n_out5p0 = n_out4p0 / n_in5p1;

// ScalarOp:8
	float n_out8p0 = dot(n_out7p0, vec3(0.333333, 0.333333, 0.333333)) - n_out5p0;

// ScalarFunc:9
	float n_out9p0 = round(n_out8p0);

// TextureUniform:17
	vec3 n_out17p0;
	float n_out17p1;
	{
		vec4 n_tex_read = texture(Texture_Roughness, UV.xy);
		n_out17p0 = n_tex_read.rgb;
		n_out17p1 = n_tex_read.a;
	}

// ScalarOp:10
	float n_in10p1 = 0.05000;
	float n_out10p0 = n_out8p0 - n_in10p1;

// ScalarOp:11
	float n_in11p0 = 1.00000;
	float n_out11p0 = n_in11p0 - n_out10p0;

// ScalarFunc:12
	float n_out12p0 = round(n_out11p0);

// Color:14
	vec3 n_out14p0 = vec3(1.000000, 0.583594, 0.000000);
	float n_out14p1 = 1.000000;

// VectorOp:13
	vec3 n_out13p0 = vec3(n_out12p0) * n_out14p0;

// TextureUniform:16
	vec3 n_out16p0;
	float n_out16p1;
	{
		vec4 n_tex_read = texture(Texture_Normal, UV.xy);
		n_out16p0 = n_tex_read.rgb;
		n_out16p1 = n_tex_read.a;
	}

// Output:0
	ALBEDO = n_out15p0;
	ALPHA = n_out9p0;
	ROUGHNESS = dot(n_out17p0, vec3(0.333333, 0.333333, 0.333333));
	EMISSION = n_out13p0;
	NORMALMAP = n_out16p0;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( -1640.55, 311.741 )
modes/cull = 2
modes/depth_draw = 3
nodes/fragment/0/position = Vector2( 1200, 200 )
nodes/fragment/2/node = SubResource( 7 )
nodes/fragment/2/position = Vector2( -400, 200 )
nodes/fragment/4/node = SubResource( 9 )
nodes/fragment/4/position = Vector2( -400, 400 )
nodes/fragment/5/node = SubResource( 10 )
nodes/fragment/5/position = Vector2( -200, 400 )
nodes/fragment/7/node = SubResource( 11 )
nodes/fragment/7/position = Vector2( -200, 140 )
nodes/fragment/8/node = SubResource( 12 )
nodes/fragment/8/position = Vector2( 0, 320 )
nodes/fragment/9/node = SubResource( 13 )
nodes/fragment/9/position = Vector2( 200, 200 )
nodes/fragment/10/node = SubResource( 2 )
nodes/fragment/10/position = Vector2( 200, 400 )
nodes/fragment/11/node = SubResource( 3 )
nodes/fragment/11/position = Vector2( 380, 400 )
nodes/fragment/12/node = SubResource( 4 )
nodes/fragment/12/position = Vector2( 560, 400 )
nodes/fragment/13/node = SubResource( 5 )
nodes/fragment/13/position = Vector2( 920, 400 )
nodes/fragment/14/node = SubResource( 6 )
nodes/fragment/14/position = Vector2( 600, 600 )
nodes/fragment/15/node = SubResource( 15 )
nodes/fragment/15/position = Vector2( 840, -400 )
nodes/fragment/16/node = SubResource( 16 )
nodes/fragment/16/position = Vector2( 840, 0 )
nodes/fragment/17/node = SubResource( 17 )
nodes/fragment/17/position = Vector2( 840, -200 )
nodes/fragment/18/node = SubResource( 18 )
nodes/fragment/18/position = Vector2( -960, 300 )
nodes/fragment/18/size = Vector2( 250, 150 )
nodes/fragment/18/input_ports = "0,0,input;"
nodes/fragment/18/output_ports = "0,0,scalar_Fade;"
nodes/fragment/18/expression = "scalar_Fade = input -1f;"
nodes/fragment/connections = PoolIntArray( 4, 0, 5, 0, 2, 0, 7, 0, 7, 0, 8, 0, 8, 0, 9, 0, 5, 0, 8, 1, 9, 0, 0, 1, 8, 0, 10, 0, 10, 0, 11, 1, 11, 0, 12, 0, 12, 0, 13, 0, 14, 0, 13, 1, 13, 0, 0, 5, 15, 0, 0, 0, 17, 0, 0, 3, 16, 0, 0, 8, 18, 0, 4, 0 )

[resource]
shader = SubResource( 14 )
shader_param/Textrure_Albedo = ExtResource( 2 )
shader_param/Texture_Roughness = ExtResource( 3 )
shader_param/Texture_Normal = ExtResource( 4 )
