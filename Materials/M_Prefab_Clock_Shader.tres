[gd_resource type="VisualShader" load_steps=31 format=2]

[sub_resource type="VisualShaderNodeScalarFunc" id=8]
function = 0

[sub_resource type="VisualShaderNodeVectorFunc" id=9]

[sub_resource type="VisualShaderNodeScalarConstant" id=10]
constant = 3.14159

[sub_resource type="VisualShaderNodeScalarOp" id=11]
default_input_values = [ 0, 1.0, 1, 0.0 ]
operator = 1

[sub_resource type="VisualShaderNodeScalarOp" id=12]
default_input_values = [ 0, 0.0, 1, 1.0 ]
operator = 7

[sub_resource type="VisualShaderNodeScalarFunc" id=13]
function = 0

[sub_resource type="VisualShaderNodeScalarOp" id=15]
default_input_values = [ 0, 1.0, 1, 0.0 ]
operator = 2

[sub_resource type="VisualShaderNodeScalarOp" id=16]
operator = 6

[sub_resource type="VisualShaderNodeScalarUniform" id=1]
uniform_name = "corruption_scalar"

[sub_resource type="VisualShaderNodeInput" id=17]
input_name = "time"

[sub_resource type="VisualShaderNodeScalarOp" id=18]
default_input_values = [ 0, 1.0, 1, 0.5 ]
operator = 2

[sub_resource type="VisualShaderNodeScalarOp" id=19]
default_input_values = [ 0, 1.0, 1, 2.0 ]
operator = 2

[sub_resource type="VisualShaderNodeScalarOp" id=20]
default_input_values = [ 0, 1.0, 1, 0.125 ]
operator = 2

[sub_resource type="VisualShaderNodeScalarOp" id=21]
default_input_values = [ 0, 1.0, 1, 0.5 ]
operator = 2

[sub_resource type="VisualShaderNodeScalarFunc" id=22]
function = 0

[sub_resource type="VisualShaderNodeScalarFunc" id=24]
function = 12

[sub_resource type="VisualShaderNodeScalarOp" id=25]
default_input_values = [ 0, 1.0, 1, 2.0 ]
operator = 2

[sub_resource type="VisualShaderNodeScalarOp" id=26]
default_input_values = [ 0, 1.0, 1, 2.0 ]
operator = 2

[sub_resource type="VisualShaderNodeVectorOp" id=2]

[sub_resource type="VisualShaderNodeScalarOp" id=27]
operator = 6

[sub_resource type="VisualShaderNodeScalarOp" id=28]
default_input_values = [ 0, 1.0, 1, 1.5 ]
operator = 2

[sub_resource type="VisualShaderNodeScalarConstant" id=30]
constant = 0.666

[sub_resource type="VisualShaderNodeScalarOp" id=31]
default_input_values = [ 0, 1.0, 1, 0.5 ]
operator = 2

[sub_resource type="VisualShaderNodeScalarConstant" id=32]
constant = 0.666

[sub_resource type="VisualShaderNodeVec3Constant" id=33]
constant = Vector3( 0.1, 0.1, 0.1 )

[sub_resource type="VisualShaderNodeVec3Constant" id=3]
constant = Vector3( 0.6, 0.06, 0 )

[sub_resource type="VisualShaderNodeVectorOp" id=4]
operator = 2

[sub_resource type="VisualShaderNodeVec3Constant" id=5]
constant = Vector3( 0.12, 1, 0.333 )

[sub_resource type="VisualShaderNodeVectorOp" id=6]
operator = 2

[sub_resource type="VisualShaderNodeScalarOp" id=7]
default_input_values = [ 0, 1.0, 1, 0.0 ]
operator = 1

[resource]
code = "shader_type spatial;
render_mode specular_schlick_ggx;

uniform float corruption_scalar;



void vertex() {
// Output:0

}

void fragment() {
// Vector:7
	vec3 n_out7p0 = vec3(0.120000, 1.000000, 0.333000);

// ScalarUniform:2
	float n_out2p0 = corruption_scalar;

// Scalar:12
	float n_out12p0 = 3.141593;

// ScalarOp:21
	float n_in21p1 = 0.50000;
	float n_out21p0 = n_out12p0 * n_in21p1;

// ScalarOp:29
	float n_out29p0 = n_out2p0 * n_out21p0;

// ScalarOp:28
	float n_in28p1 = 2.00000;
	float n_out28p0 = n_out29p0 * n_in28p1;

// ScalarOp:13
	float n_out13p0 = n_out28p0 - n_out21p0;

// ScalarOp:30
	float n_in30p1 = 0.00000;
	float n_out30p0 = max(n_out13p0, n_in30p1);

// ScalarOp:31
	float n_in31p1 = 1.50000;
	float n_out31p0 = n_out30p0 * n_in31p1;

// ScalarOp:14
	float n_in14p1 = 1.00000;
	float n_out14p0 = min(n_out31p0, n_in14p1);

// ScalarFunc:10
	float n_out10p0 = sin(n_out14p0);

// VectorOp:6
	vec3 n_out6p0 = n_out7p0 * vec3(n_out10p0);

// Vector:36
	vec3 n_out36p0 = vec3(0.100000, 0.100000, 0.100000);

// ScalarOp:9
	float n_in9p0 = 1.00000;
	float n_out9p0 = n_in9p0 - n_out10p0;

// VectorOp:8
	vec3 n_out8p0 = n_out36p0 * vec3(n_out9p0);

// VectorOp:3
	vec3 n_out3p0 = n_out6p0 + n_out8p0;

// Scalar:33
	float n_out33p0 = 0.666000;

// Scalar:35
	float n_out35p0 = 0.666000;

// Input:20
	float n_out20p0 = TIME;

// ScalarOp:22
	float n_in22p1 = 2.00000;
	float n_out22p0 = n_out12p0 * n_in22p1;

// ScalarOp:18
	float n_out18p0 = n_out20p0 * n_out22p0;

// ScalarFunc:16
	float n_out16p0 = sin(n_out18p0);

// ScalarOp:19
	float n_in19p1 = 0.00000;
	float n_out19p0 = max(n_out16p0, n_in19p1);

// ScalarOp:34
	float n_in34p1 = 0.50000;
	float n_out34p0 = n_out19p0 * n_in34p1;

// ScalarOp:23
	float n_in23p1 = 0.12500;
	float n_out23p0 = n_out18p0 * n_in23p1;

// ScalarFunc:25
	float n_out25p0 = sin(n_out23p0);

// ScalarFunc:27
	float n_out27p0 = abs(n_out25p0);

// ScalarOp:24
	float n_out24p0 = n_out34p0 * n_out27p0;

// Output:0
	ALBEDO = n_out3p0;
	METALLIC = n_out33p0;
	SPECULAR = n_out35p0;
	EMISSION = vec3(n_out24p0);

}

void light() {
// Output:0

}
"
graph_offset = Vector2( -1008.38, -99.7444 )
nodes/fragment/2/node = SubResource( 1 )
nodes/fragment/2/position = Vector2( -2080, 200 )
nodes/fragment/3/node = SubResource( 2 )
nodes/fragment/3/position = Vector2( -100, 100 )
nodes/fragment/5/node = SubResource( 3 )
nodes/fragment/5/position = Vector2( -1000, 80 )
nodes/fragment/6/node = SubResource( 4 )
nodes/fragment/6/position = Vector2( -300, 100 )
nodes/fragment/7/node = SubResource( 5 )
nodes/fragment/7/position = Vector2( -660, 80 )
nodes/fragment/8/node = SubResource( 6 )
nodes/fragment/8/position = Vector2( -300, 220 )
nodes/fragment/9/node = SubResource( 7 )
nodes/fragment/9/position = Vector2( -480, 220 )
nodes/fragment/10/node = SubResource( 8 )
nodes/fragment/10/position = Vector2( -700, 260 )
nodes/fragment/11/node = SubResource( 9 )
nodes/fragment/11/position = Vector2( 80, 40 )
nodes/fragment/12/node = SubResource( 10 )
nodes/fragment/12/position = Vector2( -2260, 340 )
nodes/fragment/13/node = SubResource( 11 )
nodes/fragment/13/position = Vector2( -1480, 180 )
nodes/fragment/14/node = SubResource( 12 )
nodes/fragment/14/position = Vector2( -880, 220 )
nodes/fragment/16/node = SubResource( 13 )
nodes/fragment/16/position = Vector2( -880, 400 )
nodes/fragment/18/node = SubResource( 15 )
nodes/fragment/18/position = Vector2( -1060, 360 )
nodes/fragment/19/node = SubResource( 16 )
nodes/fragment/19/position = Vector2( -680, 360 )
nodes/fragment/20/node = SubResource( 17 )
nodes/fragment/20/position = Vector2( -1240, 400 )
nodes/fragment/21/node = SubResource( 18 )
nodes/fragment/21/position = Vector2( -2060, 260 )
nodes/fragment/22/node = SubResource( 19 )
nodes/fragment/22/position = Vector2( -1240, 480 )
nodes/fragment/23/node = SubResource( 20 )
nodes/fragment/23/position = Vector2( -1060, 480 )
nodes/fragment/24/node = SubResource( 21 )
nodes/fragment/24/position = Vector2( -300, 440 )
nodes/fragment/25/node = SubResource( 22 )
nodes/fragment/25/position = Vector2( -880, 520 )
nodes/fragment/27/node = SubResource( 24 )
nodes/fragment/27/position = Vector2( -680, 520 )
nodes/fragment/28/node = SubResource( 25 )
nodes/fragment/28/position = Vector2( -1660, 180 )
nodes/fragment/29/node = SubResource( 26 )
nodes/fragment/29/position = Vector2( -1880, 180 )
nodes/fragment/30/node = SubResource( 27 )
nodes/fragment/30/position = Vector2( -1260, 220 )
nodes/fragment/31/node = SubResource( 28 )
nodes/fragment/31/position = Vector2( -1080, 220 )
nodes/fragment/33/node = SubResource( 30 )
nodes/fragment/33/position = Vector2( 100, 200 )
nodes/fragment/34/node = SubResource( 31 )
nodes/fragment/34/position = Vector2( -500, 360 )
nodes/fragment/35/node = SubResource( 32 )
nodes/fragment/35/position = Vector2( 100, 280 )
nodes/fragment/36/node = SubResource( 33 )
nodes/fragment/36/position = Vector2( -1000, -20 )
nodes/fragment/connections = PoolIntArray( 6, 0, 3, 0, 8, 0, 3, 1, 9, 0, 8, 1, 7, 0, 6, 0, 3, 0, 11, 0, 18, 0, 16, 0, 16, 0, 19, 0, 20, 0, 18, 0, 12, 0, 21, 0, 22, 0, 18, 1, 12, 0, 22, 0, 18, 0, 23, 0, 24, 0, 0, 5, 23, 0, 25, 0, 25, 0, 27, 0, 27, 0, 24, 1, 28, 0, 13, 0, 2, 0, 29, 0, 29, 0, 28, 0, 21, 0, 29, 1, 13, 0, 30, 0, 10, 0, 6, 1, 14, 0, 10, 0, 10, 0, 9, 1, 21, 0, 13, 1, 30, 0, 31, 0, 31, 0, 14, 0, 33, 0, 0, 2, 19, 0, 34, 0, 34, 0, 24, 0, 35, 0, 0, 4, 3, 0, 0, 0, 36, 0, 8, 0 )
